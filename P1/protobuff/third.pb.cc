// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: third.proto
// Protobuf C++ Version: 6.33.0-dev

#include "third.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace sample {

inline constexpr Home3::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ownership_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR Home3::Home3(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Home3_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Home3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Home3DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Home3DefaultTypeInternal() {}
  union {
    Home3 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Home3DefaultTypeInternal _Home3_default_instance_;

inline constexpr Car3::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        model_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        license_plate_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        factory_year_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Car3::Car3(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Car3_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Car3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Car3DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Car3DefaultTypeInternal() {}
  union {
    Car3 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Car3DefaultTypeInternal _Car3_default_instance_;

inline constexpr Born3::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        date_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        city_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        hospital_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        father_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR Born3::Born3(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Born3_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Born3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Born3DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Born3DefaultTypeInternal() {}
  union {
    Born3 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Born3DefaultTypeInternal _Born3_default_instance_;

inline constexpr PersonThird::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        cars_{},
        homes_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        born_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PersonThird::PersonThird(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PersonThird_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PersonThirdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PersonThirdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PersonThirdDefaultTypeInternal() {}
  union {
    PersonThird _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PersonThirdDefaultTypeInternal _PersonThird_default_instance_;

inline constexpr PeopleThird::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        people_{} {}

template <typename>
PROTOBUF_CONSTEXPR PeopleThird::PeopleThird(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PeopleThird_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PeopleThirdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PeopleThirdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PeopleThirdDefaultTypeInternal() {}
  union {
    PeopleThird _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PeopleThirdDefaultTypeInternal _PeopleThird_default_instance_;
}  // namespace sample
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_third_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_third_2eproto = nullptr;
const ::uint32_t
    TableStruct_third_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sample::Born3, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sample::Born3, _impl_.date_),
        PROTOBUF_FIELD_OFFSET(::sample::Born3, _impl_.city_),
        PROTOBUF_FIELD_OFFSET(::sample::Born3, _impl_.hospital_name_),
        PROTOBUF_FIELD_OFFSET(::sample::Born3, _impl_.father_name_),
        0,
        1,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sample::Car3, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sample::Car3, _impl_.model_name_),
        PROTOBUF_FIELD_OFFSET(::sample::Car3, _impl_.factory_year_),
        PROTOBUF_FIELD_OFFSET(::sample::Car3, _impl_.license_plate_),
        0,
        2,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sample::Home3, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sample::Home3, _impl_.address_),
        PROTOBUF_FIELD_OFFSET(::sample::Home3, _impl_.ownership_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sample::PersonThird, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sample::PersonThird, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::sample::PersonThird, _impl_.born_),
        PROTOBUF_FIELD_OFFSET(::sample::PersonThird, _impl_.cars_),
        PROTOBUF_FIELD_OFFSET(::sample::PersonThird, _impl_.homes_),
        2,
        3,
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sample::PeopleThird, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sample::PeopleThird, _impl_.people_),
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::sample::Born3)},
        {11, sizeof(::sample::Car3)},
        {20, sizeof(::sample::Home3)},
        {27, sizeof(::sample::PersonThird)},
        {38, sizeof(::sample::PeopleThird)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::sample::_Born3_default_instance_._instance,
    &::sample::_Car3_default_instance_._instance,
    &::sample::_Home3_default_instance_._instance,
    &::sample::_PersonThird_default_instance_._instance,
    &::sample::_PeopleThird_default_instance_._instance,
};
const char descriptor_table_protodef_third_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\013third.proto\022\006sample\"O\n\005Born3\022\014\n\004date\030\001"
    " \001(\t\022\014\n\004city\030\002 \001(\t\022\025\n\rhospital_name\030\003 \001("
    "\t\022\023\n\013father_name\030\004 \001(\t\"G\n\004Car3\022\022\n\nmodel_"
    "name\030\001 \001(\t\022\024\n\014factory_year\030\002 \001(\005\022\025\n\rlice"
    "nse_plate\030\003 \001(\t\"+\n\005Home3\022\017\n\007address\030\001 \001("
    "\t\022\021\n\townership\030\002 \001(\t\"r\n\013PersonThird\022\014\n\004n"
    "ame\030\001 \001(\t\022\033\n\004born\030\002 \001(\0132\r.sample.Born3\022\032"
    "\n\004cars\030\003 \003(\0132\014.sample.Car3\022\034\n\005homes\030\004 \003("
    "\0132\r.sample.Home3\"2\n\013PeopleThird\022#\n\006peopl"
    "e\030\001 \003(\0132\023.sample.PersonThirdb\006proto3"
};
static ::absl::once_flag descriptor_table_third_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_third_2eproto = {
    false,
    false,
    396,
    descriptor_table_protodef_third_2eproto,
    "third.proto",
    &descriptor_table_third_2eproto_once,
    nullptr,
    0,
    5,
    schemas,
    file_default_instances,
    TableStruct_third_2eproto::offsets,
    file_level_enum_descriptors_third_2eproto,
    file_level_service_descriptors_third_2eproto,
};
namespace sample {
// ===================================================================

class Born3::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Born3>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Born3, _impl_._has_bits_);
};

Born3::Born3(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Born3_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sample.Born3)
}
PROTOBUF_NDEBUG_INLINE Born3::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::sample::Born3& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        date_(arena, from.date_),
        city_(arena, from.city_),
        hospital_name_(arena, from.hospital_name_),
        father_name_(arena, from.father_name_) {}

Born3::Born3(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Born3& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Born3_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Born3* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:sample.Born3)
}
PROTOBUF_NDEBUG_INLINE Born3::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        date_(arena),
        city_(arena),
        hospital_name_(arena),
        father_name_(arena) {}

inline void Born3::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Born3::~Born3() {
  // @@protoc_insertion_point(destructor:sample.Born3)
  SharedDtor(*this);
}
inline void Born3::SharedDtor(MessageLite& self) {
  Born3& this_ = static_cast<Born3&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.date_.Destroy();
  this_._impl_.city_.Destroy();
  this_._impl_.hospital_name_.Destroy();
  this_._impl_.father_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Born3::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Born3(arena);
}
constexpr auto Born3::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Born3),
                                            alignof(Born3));
}
constexpr auto Born3::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Born3_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Born3::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Born3>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Born3::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Born3>(), &Born3::ByteSizeLong,
              &Born3::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Born3, _impl_._cached_size_),
          false,
      },
      &Born3::kDescriptorMethods,
      &descriptor_table_third_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Born3_class_data_ =
        Born3::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Born3::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Born3_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Born3_class_data_.tc_table);
  return Born3_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 53, 2>
Born3::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Born3, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Born3_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sample::Born3>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string father_name = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(Born3, _impl_.father_name_)}},
    // string date = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Born3, _impl_.date_)}},
    // string city = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Born3, _impl_.city_)}},
    // string hospital_name = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(Born3, _impl_.hospital_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string date = 1;
    {PROTOBUF_FIELD_OFFSET(Born3, _impl_.date_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string city = 2;
    {PROTOBUF_FIELD_OFFSET(Born3, _impl_.city_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string hospital_name = 3;
    {PROTOBUF_FIELD_OFFSET(Born3, _impl_.hospital_name_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string father_name = 4;
    {PROTOBUF_FIELD_OFFSET(Born3, _impl_.father_name_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\14\4\4\15\13\0\0\0"
    "sample.Born3"
    "date"
    "city"
    "hospital_name"
    "father_name"
  }},
};
PROTOBUF_NOINLINE void Born3::Clear() {
// @@protoc_insertion_point(message_clear_start:sample.Born3)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x0000000fU)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      _impl_.date_.ClearNonDefaultToEmpty();
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      _impl_.city_.ClearNonDefaultToEmpty();
    }
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      _impl_.hospital_name_.ClearNonDefaultToEmpty();
    }
    if (CheckHasBit(cached_has_bits, 0x00000008U)) {
      _impl_.father_name_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Born3::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Born3& this_ = static_cast<const Born3&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Born3::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Born3& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:sample.Born3)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // string date = 1;
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    if (!this_._internal_date().empty()) {
      const ::std::string& _s = this_._internal_date();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "sample.Born3.date");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string city = 2;
  if (CheckHasBit(cached_has_bits, 0x00000002U)) {
    if (!this_._internal_city().empty()) {
      const ::std::string& _s = this_._internal_city();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "sample.Born3.city");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string hospital_name = 3;
  if (CheckHasBit(cached_has_bits, 0x00000004U)) {
    if (!this_._internal_hospital_name().empty()) {
      const ::std::string& _s = this_._internal_hospital_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "sample.Born3.hospital_name");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string father_name = 4;
  if (CheckHasBit(cached_has_bits, 0x00000008U)) {
    if (!this_._internal_father_name().empty()) {
      const ::std::string& _s = this_._internal_father_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "sample.Born3.father_name");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sample.Born3)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Born3::ByteSizeLong(const MessageLite& base) {
  const Born3& this_ = static_cast<const Born3&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Born3::ByteSizeLong() const {
  const Born3& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sample.Born3)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x0000000fU)) {
    // string date = 1;
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!this_._internal_date().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_date());
      }
    }
    // string city = 2;
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (!this_._internal_city().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_city());
      }
    }
    // string hospital_name = 3;
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      if (!this_._internal_hospital_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_hospital_name());
      }
    }
    // string father_name = 4;
    if (CheckHasBit(cached_has_bits, 0x00000008U)) {
      if (!this_._internal_father_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_father_name());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Born3::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<Born3*>(&to_msg);
  auto& from = static_cast<const Born3&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:sample.Born3)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x0000000fU)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!from._internal_date().empty()) {
        _this->_internal_set_date(from._internal_date());
      } else {
        if (_this->_impl_.date_.IsDefault()) {
          _this->_internal_set_date("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (!from._internal_city().empty()) {
        _this->_internal_set_city(from._internal_city());
      } else {
        if (_this->_impl_.city_.IsDefault()) {
          _this->_internal_set_city("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      if (!from._internal_hospital_name().empty()) {
        _this->_internal_set_hospital_name(from._internal_hospital_name());
      } else {
        if (_this->_impl_.hospital_name_.IsDefault()) {
          _this->_internal_set_hospital_name("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000008U)) {
      if (!from._internal_father_name().empty()) {
        _this->_internal_set_father_name(from._internal_father_name());
      } else {
        if (_this->_impl_.father_name_.IsDefault()) {
          _this->_internal_set_father_name("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void Born3::CopyFrom(const Born3& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:sample.Born3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Born3::InternalSwap(Born3* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.date_, &other->_impl_.date_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.city_, &other->_impl_.city_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hospital_name_, &other->_impl_.hospital_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.father_name_, &other->_impl_.father_name_, arena);
}

::google::protobuf::Metadata Born3::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Car3::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Car3>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Car3, _impl_._has_bits_);
};

Car3::Car3(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Car3_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sample.Car3)
}
PROTOBUF_NDEBUG_INLINE Car3::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::sample::Car3& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        model_name_(arena, from.model_name_),
        license_plate_(arena, from.license_plate_) {}

Car3::Car3(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Car3& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Car3_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Car3* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.factory_year_ = from._impl_.factory_year_;

  // @@protoc_insertion_point(copy_constructor:sample.Car3)
}
PROTOBUF_NDEBUG_INLINE Car3::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        model_name_(arena),
        license_plate_(arena) {}

inline void Car3::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.factory_year_ = {};
}
Car3::~Car3() {
  // @@protoc_insertion_point(destructor:sample.Car3)
  SharedDtor(*this);
}
inline void Car3::SharedDtor(MessageLite& self) {
  Car3& this_ = static_cast<Car3&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.model_name_.Destroy();
  this_._impl_.license_plate_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Car3::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Car3(arena);
}
constexpr auto Car3::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Car3),
                                            alignof(Car3));
}
constexpr auto Car3::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Car3_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Car3::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Car3>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Car3::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Car3>(), &Car3::ByteSizeLong,
              &Car3::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Car3, _impl_._cached_size_),
          false,
      },
      &Car3::kDescriptorMethods,
      &descriptor_table_third_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Car3_class_data_ =
        Car3::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Car3::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Car3_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Car3_class_data_.tc_table);
  return Car3_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 43, 2>
Car3::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Car3, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Car3_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sample::Car3>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string model_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Car3, _impl_.model_name_)}},
    // int32 factory_year = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Car3, _impl_.factory_year_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(Car3, _impl_.factory_year_)}},
    // string license_plate = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(Car3, _impl_.license_plate_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string model_name = 1;
    {PROTOBUF_FIELD_OFFSET(Car3, _impl_.model_name_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 factory_year = 2;
    {PROTOBUF_FIELD_OFFSET(Car3, _impl_.factory_year_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string license_plate = 3;
    {PROTOBUF_FIELD_OFFSET(Car3, _impl_.license_plate_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\13\12\0\15\0\0\0\0"
    "sample.Car3"
    "model_name"
    "license_plate"
  }},
};
PROTOBUF_NOINLINE void Car3::Clear() {
// @@protoc_insertion_point(message_clear_start:sample.Car3)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      _impl_.model_name_.ClearNonDefaultToEmpty();
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      _impl_.license_plate_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.factory_year_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Car3::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Car3& this_ = static_cast<const Car3&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Car3::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Car3& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:sample.Car3)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // string model_name = 1;
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    if (!this_._internal_model_name().empty()) {
      const ::std::string& _s = this_._internal_model_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "sample.Car3.model_name");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // int32 factory_year = 2;
  if (CheckHasBit(cached_has_bits, 0x00000004U)) {
    if (this_._internal_factory_year() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_factory_year(), target);
    }
  }

  // string license_plate = 3;
  if (CheckHasBit(cached_has_bits, 0x00000002U)) {
    if (!this_._internal_license_plate().empty()) {
      const ::std::string& _s = this_._internal_license_plate();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "sample.Car3.license_plate");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sample.Car3)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Car3::ByteSizeLong(const MessageLite& base) {
  const Car3& this_ = static_cast<const Car3&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Car3::ByteSizeLong() const {
  const Car3& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sample.Car3)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000007U)) {
    // string model_name = 1;
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!this_._internal_model_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_model_name());
      }
    }
    // string license_plate = 3;
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (!this_._internal_license_plate().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_license_plate());
      }
    }
    // int32 factory_year = 2;
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      if (this_._internal_factory_year() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_factory_year());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Car3::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<Car3*>(&to_msg);
  auto& from = static_cast<const Car3&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:sample.Car3)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000007U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!from._internal_model_name().empty()) {
        _this->_internal_set_model_name(from._internal_model_name());
      } else {
        if (_this->_impl_.model_name_.IsDefault()) {
          _this->_internal_set_model_name("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (!from._internal_license_plate().empty()) {
        _this->_internal_set_license_plate(from._internal_license_plate());
      } else {
        if (_this->_impl_.license_plate_.IsDefault()) {
          _this->_internal_set_license_plate("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      if (from._internal_factory_year() != 0) {
        _this->_impl_.factory_year_ = from._impl_.factory_year_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void Car3::CopyFrom(const Car3& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:sample.Car3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Car3::InternalSwap(Car3* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.model_name_, &other->_impl_.model_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.license_plate_, &other->_impl_.license_plate_, arena);
  swap(_impl_.factory_year_, other->_impl_.factory_year_);
}

::google::protobuf::Metadata Car3::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Home3::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Home3>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Home3, _impl_._has_bits_);
};

Home3::Home3(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Home3_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sample.Home3)
}
PROTOBUF_NDEBUG_INLINE Home3::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::sample::Home3& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        address_(arena, from.address_),
        ownership_(arena, from.ownership_) {}

Home3::Home3(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Home3& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Home3_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Home3* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:sample.Home3)
}
PROTOBUF_NDEBUG_INLINE Home3::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        address_(arena),
        ownership_(arena) {}

inline void Home3::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Home3::~Home3() {
  // @@protoc_insertion_point(destructor:sample.Home3)
  SharedDtor(*this);
}
inline void Home3::SharedDtor(MessageLite& self) {
  Home3& this_ = static_cast<Home3&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.address_.Destroy();
  this_._impl_.ownership_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Home3::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Home3(arena);
}
constexpr auto Home3::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Home3),
                                            alignof(Home3));
}
constexpr auto Home3::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Home3_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Home3::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Home3>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Home3::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Home3>(), &Home3::ByteSizeLong,
              &Home3::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Home3, _impl_._cached_size_),
          false,
      },
      &Home3::kDescriptorMethods,
      &descriptor_table_third_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Home3_class_data_ =
        Home3::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Home3::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Home3_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Home3_class_data_.tc_table);
  return Home3_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 37, 2>
Home3::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Home3, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Home3_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sample::Home3>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string ownership = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Home3, _impl_.ownership_)}},
    // string address = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Home3, _impl_.address_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string address = 1;
    {PROTOBUF_FIELD_OFFSET(Home3, _impl_.address_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string ownership = 2;
    {PROTOBUF_FIELD_OFFSET(Home3, _impl_.ownership_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\14\7\11\0\0\0\0\0"
    "sample.Home3"
    "address"
    "ownership"
  }},
};
PROTOBUF_NOINLINE void Home3::Clear() {
// @@protoc_insertion_point(message_clear_start:sample.Home3)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      _impl_.address_.ClearNonDefaultToEmpty();
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      _impl_.ownership_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Home3::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Home3& this_ = static_cast<const Home3&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Home3::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Home3& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:sample.Home3)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // string address = 1;
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    if (!this_._internal_address().empty()) {
      const ::std::string& _s = this_._internal_address();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "sample.Home3.address");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string ownership = 2;
  if (CheckHasBit(cached_has_bits, 0x00000002U)) {
    if (!this_._internal_ownership().empty()) {
      const ::std::string& _s = this_._internal_ownership();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "sample.Home3.ownership");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sample.Home3)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Home3::ByteSizeLong(const MessageLite& base) {
  const Home3& this_ = static_cast<const Home3&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Home3::ByteSizeLong() const {
  const Home3& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sample.Home3)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    // string address = 1;
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!this_._internal_address().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_address());
      }
    }
    // string ownership = 2;
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (!this_._internal_ownership().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_ownership());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Home3::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<Home3*>(&to_msg);
  auto& from = static_cast<const Home3&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:sample.Home3)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!from._internal_address().empty()) {
        _this->_internal_set_address(from._internal_address());
      } else {
        if (_this->_impl_.address_.IsDefault()) {
          _this->_internal_set_address("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (!from._internal_ownership().empty()) {
        _this->_internal_set_ownership(from._internal_ownership());
      } else {
        if (_this->_impl_.ownership_.IsDefault()) {
          _this->_internal_set_ownership("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void Home3::CopyFrom(const Home3& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:sample.Home3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Home3::InternalSwap(Home3* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, &other->_impl_.address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ownership_, &other->_impl_.ownership_, arena);
}

::google::protobuf::Metadata Home3::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PersonThird::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<PersonThird>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PersonThird, _impl_._has_bits_);
};

PersonThird::PersonThird(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PersonThird_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sample.PersonThird)
}
PROTOBUF_NDEBUG_INLINE PersonThird::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::sample::PersonThird& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        cars_{visibility, arena, from.cars_},
        homes_{visibility, arena, from.homes_},
        name_(arena, from.name_) {}

PersonThird::PersonThird(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const PersonThird& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PersonThird_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PersonThird* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.born_ = (CheckHasBit(cached_has_bits, 0x00000008U))
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.born_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sample.PersonThird)
}
PROTOBUF_NDEBUG_INLINE PersonThird::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        cars_{visibility, arena},
        homes_{visibility, arena},
        name_(arena) {}

inline void PersonThird::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.born_ = {};
}
PersonThird::~PersonThird() {
  // @@protoc_insertion_point(destructor:sample.PersonThird)
  SharedDtor(*this);
}
inline void PersonThird::SharedDtor(MessageLite& self) {
  PersonThird& this_ = static_cast<PersonThird&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  delete this_._impl_.born_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PersonThird::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PersonThird(arena);
}
constexpr auto PersonThird::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PersonThird, _impl_.cars_) +
          decltype(PersonThird::_impl_.cars_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PersonThird, _impl_.homes_) +
          decltype(PersonThird::_impl_.homes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(PersonThird), alignof(PersonThird), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PersonThird::PlacementNew_,
                                 sizeof(PersonThird),
                                 alignof(PersonThird));
  }
}
constexpr auto PersonThird::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PersonThird_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PersonThird::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PersonThird>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PersonThird::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PersonThird>(), &PersonThird::ByteSizeLong,
              &PersonThird::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PersonThird, _impl_._cached_size_),
          false,
      },
      &PersonThird::kDescriptorMethods,
      &descriptor_table_third_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull PersonThird_class_data_ =
        PersonThird::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
PersonThird::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PersonThird_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PersonThird_class_data_.tc_table);
  return PersonThird_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 3, 31, 2>
PersonThird::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PersonThird, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    PersonThird_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sample::PersonThird>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .sample.Home3 homes = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 1, 2, PROTOBUF_FIELD_OFFSET(PersonThird, _impl_.homes_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 2, 0, PROTOBUF_FIELD_OFFSET(PersonThird, _impl_.name_)}},
    // .sample.Born3 born = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 3, 0, PROTOBUF_FIELD_OFFSET(PersonThird, _impl_.born_)}},
    // repeated .sample.Car3 cars = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 0, 1, PROTOBUF_FIELD_OFFSET(PersonThird, _impl_.cars_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(PersonThird, _impl_.name_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .sample.Born3 born = 2;
    {PROTOBUF_FIELD_OFFSET(PersonThird, _impl_.born_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .sample.Car3 cars = 3;
    {PROTOBUF_FIELD_OFFSET(PersonThird, _impl_.cars_), _Internal::kHasBitsOffset + 0, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .sample.Home3 homes = 4;
    {PROTOBUF_FIELD_OFFSET(PersonThird, _impl_.homes_), _Internal::kHasBitsOffset + 1, 2, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sample::Born3>()},
      {::_pbi::TcParser::GetTable<::sample::Car3>()},
      {::_pbi::TcParser::GetTable<::sample::Home3>()},
  }},
  {{
    "\22\4\0\0\0\0\0\0"
    "sample.PersonThird"
    "name"
  }},
};
PROTOBUF_NOINLINE void PersonThird::Clear() {
// @@protoc_insertion_point(message_clear_start:sample.PersonThird)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x0000000fU)) {
    if (CheckHasBitForRepeated(cached_has_bits, 0x00000001U)) {
      _impl_.cars_.Clear();
    }
    if (CheckHasBitForRepeated(cached_has_bits, 0x00000002U)) {
      _impl_.homes_.Clear();
    }
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (CheckHasBit(cached_has_bits, 0x00000008U)) {
      ABSL_DCHECK(_impl_.born_ != nullptr);
      _impl_.born_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PersonThird::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PersonThird& this_ = static_cast<const PersonThird&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PersonThird::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PersonThird& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:sample.PersonThird)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // string name = 1;
  if (CheckHasBit(cached_has_bits, 0x00000004U)) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "sample.PersonThird.name");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // .sample.Born3 born = 2;
  if (CheckHasBit(cached_has_bits, 0x00000008U)) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.born_, this_._impl_.born_->GetCachedSize(), target,
        stream);
  }

  // repeated .sample.Car3 cars = 3;
  if (CheckHasBitForRepeated(cached_has_bits, 0x00000001U)) {
    for (unsigned i = 0, n = static_cast<unsigned>(
                             this_._internal_cars_size());
         i < n; i++) {
      const auto& repfield = this_._internal_cars().Get(i);
      target =
          ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
              3, repfield, repfield.GetCachedSize(),
              target, stream);
    }
  }

  // repeated .sample.Home3 homes = 4;
  if (CheckHasBitForRepeated(cached_has_bits, 0x00000002U)) {
    for (unsigned i = 0, n = static_cast<unsigned>(
                             this_._internal_homes_size());
         i < n; i++) {
      const auto& repfield = this_._internal_homes().Get(i);
      target =
          ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
              4, repfield, repfield.GetCachedSize(),
              target, stream);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sample.PersonThird)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PersonThird::ByteSizeLong(const MessageLite& base) {
  const PersonThird& this_ = static_cast<const PersonThird&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PersonThird::ByteSizeLong() const {
  const PersonThird& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sample.PersonThird)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x0000000fU)) {
    // repeated .sample.Car3 cars = 3;
    if (CheckHasBitForRepeated(cached_has_bits, 0x00000001U)) {
      total_size += 1UL * this_._internal_cars_size();
      for (const auto& msg : this_._internal_cars()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .sample.Home3 homes = 4;
    if (CheckHasBitForRepeated(cached_has_bits, 0x00000002U)) {
      total_size += 1UL * this_._internal_homes_size();
      for (const auto& msg : this_._internal_homes()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // string name = 1;
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // .sample.Born3 born = 2;
    if (CheckHasBit(cached_has_bits, 0x00000008U)) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.born_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PersonThird::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<PersonThird*>(&to_msg);
  auto& from = static_cast<const PersonThird&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sample.PersonThird)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x0000000fU)) {
    if (CheckHasBitForRepeated(cached_has_bits, 0x00000001U)) {
      _this->_internal_mutable_cars()->MergeFrom(
          from._internal_cars());
    }
    if (CheckHasBitForRepeated(cached_has_bits, 0x00000002U)) {
      _this->_internal_mutable_homes()->MergeFrom(
          from._internal_homes());
    }
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000008U)) {
      ABSL_DCHECK(from._impl_.born_ != nullptr);
      if (_this->_impl_.born_ == nullptr) {
        _this->_impl_.born_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.born_);
      } else {
        _this->_impl_.born_->MergeFrom(*from._impl_.born_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void PersonThird::CopyFrom(const PersonThird& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:sample.PersonThird)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PersonThird::InternalSwap(PersonThird* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.cars_.InternalSwap(&other->_impl_.cars_);
  _impl_.homes_.InternalSwap(&other->_impl_.homes_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  swap(_impl_.born_, other->_impl_.born_);
}

::google::protobuf::Metadata PersonThird::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PeopleThird::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<PeopleThird>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PeopleThird, _impl_._has_bits_);
};

PeopleThird::PeopleThird(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PeopleThird_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sample.PeopleThird)
}
PROTOBUF_NDEBUG_INLINE PeopleThird::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::sample::PeopleThird& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        people_{visibility, arena, from.people_} {}

PeopleThird::PeopleThird(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const PeopleThird& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PeopleThird_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PeopleThird* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:sample.PeopleThird)
}
PROTOBUF_NDEBUG_INLINE PeopleThird::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        people_{visibility, arena} {}

inline void PeopleThird::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PeopleThird::~PeopleThird() {
  // @@protoc_insertion_point(destructor:sample.PeopleThird)
  SharedDtor(*this);
}
inline void PeopleThird::SharedDtor(MessageLite& self) {
  PeopleThird& this_ = static_cast<PeopleThird&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PeopleThird::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PeopleThird(arena);
}
constexpr auto PeopleThird::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PeopleThird, _impl_.people_) +
          decltype(PeopleThird::_impl_.people_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(PeopleThird), alignof(PeopleThird), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PeopleThird::PlacementNew_,
                                 sizeof(PeopleThird),
                                 alignof(PeopleThird));
  }
}
constexpr auto PeopleThird::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PeopleThird_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PeopleThird::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PeopleThird>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PeopleThird::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PeopleThird>(), &PeopleThird::ByteSizeLong,
              &PeopleThird::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PeopleThird, _impl_._cached_size_),
          false,
      },
      &PeopleThird::kDescriptorMethods,
      &descriptor_table_third_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull PeopleThird_class_data_ =
        PeopleThird::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
PeopleThird::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PeopleThird_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PeopleThird_class_data_.tc_table);
  return PeopleThird_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
PeopleThird::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PeopleThird, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    PeopleThird_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sample::PeopleThird>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .sample.PersonThird people = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PeopleThird, _impl_.people_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .sample.PersonThird people = 1;
    {PROTOBUF_FIELD_OFFSET(PeopleThird, _impl_.people_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sample::PersonThird>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void PeopleThird::Clear() {
// @@protoc_insertion_point(message_clear_start:sample.PeopleThird)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (CheckHasBitForRepeated(cached_has_bits, 0x00000001U)) {
    _impl_.people_.Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PeopleThird::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PeopleThird& this_ = static_cast<const PeopleThird&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PeopleThird::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PeopleThird& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:sample.PeopleThird)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // repeated .sample.PersonThird people = 1;
  if (CheckHasBitForRepeated(cached_has_bits, 0x00000001U)) {
    for (unsigned i = 0, n = static_cast<unsigned>(
                             this_._internal_people_size());
         i < n; i++) {
      const auto& repfield = this_._internal_people().Get(i);
      target =
          ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
              1, repfield, repfield.GetCachedSize(),
              target, stream);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sample.PeopleThird)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PeopleThird::ByteSizeLong(const MessageLite& base) {
  const PeopleThird& this_ = static_cast<const PeopleThird&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PeopleThird::ByteSizeLong() const {
  const PeopleThird& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sample.PeopleThird)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .sample.PersonThird people = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if (CheckHasBitForRepeated(cached_has_bits, 0x00000001U)) {
      total_size += 1UL * this_._internal_people_size();
      for (const auto& msg : this_._internal_people()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PeopleThird::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<PeopleThird*>(&to_msg);
  auto& from = static_cast<const PeopleThird&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:sample.PeopleThird)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (CheckHasBitForRepeated(cached_has_bits, 0x00000001U)) {
    _this->_internal_mutable_people()->MergeFrom(
        from._internal_people());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void PeopleThird::CopyFrom(const PeopleThird& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:sample.PeopleThird)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PeopleThird::InternalSwap(PeopleThird* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.people_.InternalSwap(&other->_impl_.people_);
}

::google::protobuf::Metadata PeopleThird::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace sample
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_third_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
