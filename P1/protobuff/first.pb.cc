// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: first.proto
// Protobuf C++ Version: 6.33.0-dev

#include "first.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace sample {

inline constexpr Home::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ownership_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR Home::Home(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Home_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HomeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HomeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HomeDefaultTypeInternal() {}
  union {
    Home _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HomeDefaultTypeInternal _Home_default_instance_;

inline constexpr Car::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        model_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        license_plate_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        factory_year_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Car::Car(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Car_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CarDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CarDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CarDefaultTypeInternal() {}
  union {
    Car _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CarDefaultTypeInternal _Car_default_instance_;

inline constexpr Born::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        date_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        city_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR Born::Born(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Born_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BornDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BornDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BornDefaultTypeInternal() {}
  union {
    Born _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BornDefaultTypeInternal _Born_default_instance_;

inline constexpr PersonFirst::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        job_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        born_{nullptr},
        car_{nullptr},
        home_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PersonFirst::PersonFirst(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PersonFirst_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PersonFirstDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PersonFirstDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PersonFirstDefaultTypeInternal() {}
  union {
    PersonFirst _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PersonFirstDefaultTypeInternal _PersonFirst_default_instance_;

inline constexpr PeopleFirst::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        people_{} {}

template <typename>
PROTOBUF_CONSTEXPR PeopleFirst::PeopleFirst(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PeopleFirst_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PeopleFirstDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PeopleFirstDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PeopleFirstDefaultTypeInternal() {}
  union {
    PeopleFirst _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PeopleFirstDefaultTypeInternal _PeopleFirst_default_instance_;
}  // namespace sample
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_first_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_first_2eproto = nullptr;
const ::uint32_t
    TableStruct_first_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sample::Born, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sample::Born, _impl_.date_),
        PROTOBUF_FIELD_OFFSET(::sample::Born, _impl_.city_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sample::Car, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sample::Car, _impl_.model_name_),
        PROTOBUF_FIELD_OFFSET(::sample::Car, _impl_.factory_year_),
        PROTOBUF_FIELD_OFFSET(::sample::Car, _impl_.license_plate_),
        0,
        2,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sample::Home, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sample::Home, _impl_.address_),
        PROTOBUF_FIELD_OFFSET(::sample::Home, _impl_.ownership_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sample::PersonFirst, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sample::PersonFirst, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::sample::PersonFirst, _impl_.born_),
        PROTOBUF_FIELD_OFFSET(::sample::PersonFirst, _impl_.car_),
        PROTOBUF_FIELD_OFFSET(::sample::PersonFirst, _impl_.home_),
        PROTOBUF_FIELD_OFFSET(::sample::PersonFirst, _impl_.job_),
        0,
        2,
        3,
        4,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::sample::PeopleFirst, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::sample::PeopleFirst, _impl_.people_),
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::sample::Born)},
        {7, sizeof(::sample::Car)},
        {16, sizeof(::sample::Home)},
        {23, sizeof(::sample::PersonFirst)},
        {36, sizeof(::sample::PeopleFirst)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::sample::_Born_default_instance_._instance,
    &::sample::_Car_default_instance_._instance,
    &::sample::_Home_default_instance_._instance,
    &::sample::_PersonFirst_default_instance_._instance,
    &::sample::_PeopleFirst_default_instance_._instance,
};
const char descriptor_table_protodef_first_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\013first.proto\022\006sample\"\"\n\004Born\022\014\n\004date\030\001 "
    "\001(\t\022\014\n\004city\030\002 \001(\t\"F\n\003Car\022\022\n\nmodel_name\030\001"
    " \001(\t\022\024\n\014factory_year\030\002 \001(\005\022\025\n\rlicense_pl"
    "ate\030\003 \001(\t\"*\n\004Home\022\017\n\007address\030\001 \001(\t\022\021\n\tow"
    "nership\030\002 \001(\t\"z\n\013PersonFirst\022\014\n\004name\030\001 \001"
    "(\t\022\032\n\004born\030\002 \001(\0132\014.sample.Born\022\030\n\003car\030\003 "
    "\001(\0132\013.sample.Car\022\032\n\004home\030\004 \001(\0132\014.sample."
    "Home\022\013\n\003job\030\005 \001(\t\"2\n\013PeopleFirst\022#\n\006peop"
    "le\030\001 \003(\0132\023.sample.PersonFirstb\006proto3"
};
static ::absl::once_flag descriptor_table_first_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_first_2eproto = {
    false,
    false,
    357,
    descriptor_table_protodef_first_2eproto,
    "first.proto",
    &descriptor_table_first_2eproto_once,
    nullptr,
    0,
    5,
    schemas,
    file_default_instances,
    TableStruct_first_2eproto::offsets,
    file_level_enum_descriptors_first_2eproto,
    file_level_service_descriptors_first_2eproto,
};
namespace sample {
// ===================================================================

class Born::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Born>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Born, _impl_._has_bits_);
};

Born::Born(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Born_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sample.Born)
}
PROTOBUF_NDEBUG_INLINE Born::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::sample::Born& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        date_(arena, from.date_),
        city_(arena, from.city_) {}

Born::Born(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Born& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Born_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Born* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:sample.Born)
}
PROTOBUF_NDEBUG_INLINE Born::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        date_(arena),
        city_(arena) {}

inline void Born::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Born::~Born() {
  // @@protoc_insertion_point(destructor:sample.Born)
  SharedDtor(*this);
}
inline void Born::SharedDtor(MessageLite& self) {
  Born& this_ = static_cast<Born&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.date_.Destroy();
  this_._impl_.city_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Born::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Born(arena);
}
constexpr auto Born::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Born),
                                            alignof(Born));
}
constexpr auto Born::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Born_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Born::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Born>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Born::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Born>(), &Born::ByteSizeLong,
              &Born::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Born, _impl_._cached_size_),
          false,
      },
      &Born::kDescriptorMethods,
      &descriptor_table_first_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Born_class_data_ =
        Born::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Born::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Born_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Born_class_data_.tc_table);
  return Born_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 28, 2>
Born::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Born, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Born_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sample::Born>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string city = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Born, _impl_.city_)}},
    // string date = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Born, _impl_.date_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string date = 1;
    {PROTOBUF_FIELD_OFFSET(Born, _impl_.date_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string city = 2;
    {PROTOBUF_FIELD_OFFSET(Born, _impl_.city_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\13\4\4\0\0\0\0\0"
    "sample.Born"
    "date"
    "city"
  }},
};
PROTOBUF_NOINLINE void Born::Clear() {
// @@protoc_insertion_point(message_clear_start:sample.Born)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      _impl_.date_.ClearNonDefaultToEmpty();
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      _impl_.city_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Born::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Born& this_ = static_cast<const Born&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Born::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Born& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:sample.Born)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // string date = 1;
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    if (!this_._internal_date().empty()) {
      const ::std::string& _s = this_._internal_date();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "sample.Born.date");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string city = 2;
  if (CheckHasBit(cached_has_bits, 0x00000002U)) {
    if (!this_._internal_city().empty()) {
      const ::std::string& _s = this_._internal_city();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "sample.Born.city");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sample.Born)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Born::ByteSizeLong(const MessageLite& base) {
  const Born& this_ = static_cast<const Born&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Born::ByteSizeLong() const {
  const Born& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sample.Born)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    // string date = 1;
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!this_._internal_date().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_date());
      }
    }
    // string city = 2;
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (!this_._internal_city().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_city());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Born::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<Born*>(&to_msg);
  auto& from = static_cast<const Born&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:sample.Born)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!from._internal_date().empty()) {
        _this->_internal_set_date(from._internal_date());
      } else {
        if (_this->_impl_.date_.IsDefault()) {
          _this->_internal_set_date("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (!from._internal_city().empty()) {
        _this->_internal_set_city(from._internal_city());
      } else {
        if (_this->_impl_.city_.IsDefault()) {
          _this->_internal_set_city("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void Born::CopyFrom(const Born& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:sample.Born)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Born::InternalSwap(Born* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.date_, &other->_impl_.date_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.city_, &other->_impl_.city_, arena);
}

::google::protobuf::Metadata Born::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Car::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Car>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Car, _impl_._has_bits_);
};

Car::Car(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Car_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sample.Car)
}
PROTOBUF_NDEBUG_INLINE Car::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::sample::Car& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        model_name_(arena, from.model_name_),
        license_plate_(arena, from.license_plate_) {}

Car::Car(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Car& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Car_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Car* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.factory_year_ = from._impl_.factory_year_;

  // @@protoc_insertion_point(copy_constructor:sample.Car)
}
PROTOBUF_NDEBUG_INLINE Car::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        model_name_(arena),
        license_plate_(arena) {}

inline void Car::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.factory_year_ = {};
}
Car::~Car() {
  // @@protoc_insertion_point(destructor:sample.Car)
  SharedDtor(*this);
}
inline void Car::SharedDtor(MessageLite& self) {
  Car& this_ = static_cast<Car&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.model_name_.Destroy();
  this_._impl_.license_plate_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Car::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Car(arena);
}
constexpr auto Car::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Car),
                                            alignof(Car));
}
constexpr auto Car::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Car_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Car::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Car>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Car::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Car>(), &Car::ByteSizeLong,
              &Car::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Car, _impl_._cached_size_),
          false,
      },
      &Car::kDescriptorMethods,
      &descriptor_table_first_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Car_class_data_ =
        Car::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Car::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Car_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Car_class_data_.tc_table);
  return Car_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 42, 2>
Car::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Car, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Car_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sample::Car>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string model_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Car, _impl_.model_name_)}},
    // int32 factory_year = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Car, _impl_.factory_year_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(Car, _impl_.factory_year_)}},
    // string license_plate = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(Car, _impl_.license_plate_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string model_name = 1;
    {PROTOBUF_FIELD_OFFSET(Car, _impl_.model_name_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 factory_year = 2;
    {PROTOBUF_FIELD_OFFSET(Car, _impl_.factory_year_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string license_plate = 3;
    {PROTOBUF_FIELD_OFFSET(Car, _impl_.license_plate_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\12\12\0\15\0\0\0\0"
    "sample.Car"
    "model_name"
    "license_plate"
  }},
};
PROTOBUF_NOINLINE void Car::Clear() {
// @@protoc_insertion_point(message_clear_start:sample.Car)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      _impl_.model_name_.ClearNonDefaultToEmpty();
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      _impl_.license_plate_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.factory_year_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Car::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Car& this_ = static_cast<const Car&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Car::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Car& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:sample.Car)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // string model_name = 1;
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    if (!this_._internal_model_name().empty()) {
      const ::std::string& _s = this_._internal_model_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "sample.Car.model_name");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // int32 factory_year = 2;
  if (CheckHasBit(cached_has_bits, 0x00000004U)) {
    if (this_._internal_factory_year() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_factory_year(), target);
    }
  }

  // string license_plate = 3;
  if (CheckHasBit(cached_has_bits, 0x00000002U)) {
    if (!this_._internal_license_plate().empty()) {
      const ::std::string& _s = this_._internal_license_plate();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "sample.Car.license_plate");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sample.Car)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Car::ByteSizeLong(const MessageLite& base) {
  const Car& this_ = static_cast<const Car&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Car::ByteSizeLong() const {
  const Car& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sample.Car)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000007U)) {
    // string model_name = 1;
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!this_._internal_model_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_model_name());
      }
    }
    // string license_plate = 3;
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (!this_._internal_license_plate().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_license_plate());
      }
    }
    // int32 factory_year = 2;
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      if (this_._internal_factory_year() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_factory_year());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Car::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<Car*>(&to_msg);
  auto& from = static_cast<const Car&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:sample.Car)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000007U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!from._internal_model_name().empty()) {
        _this->_internal_set_model_name(from._internal_model_name());
      } else {
        if (_this->_impl_.model_name_.IsDefault()) {
          _this->_internal_set_model_name("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (!from._internal_license_plate().empty()) {
        _this->_internal_set_license_plate(from._internal_license_plate());
      } else {
        if (_this->_impl_.license_plate_.IsDefault()) {
          _this->_internal_set_license_plate("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      if (from._internal_factory_year() != 0) {
        _this->_impl_.factory_year_ = from._impl_.factory_year_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void Car::CopyFrom(const Car& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:sample.Car)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Car::InternalSwap(Car* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.model_name_, &other->_impl_.model_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.license_plate_, &other->_impl_.license_plate_, arena);
  swap(_impl_.factory_year_, other->_impl_.factory_year_);
}

::google::protobuf::Metadata Car::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Home::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Home>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Home, _impl_._has_bits_);
};

Home::Home(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Home_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sample.Home)
}
PROTOBUF_NDEBUG_INLINE Home::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::sample::Home& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        address_(arena, from.address_),
        ownership_(arena, from.ownership_) {}

Home::Home(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Home& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Home_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Home* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:sample.Home)
}
PROTOBUF_NDEBUG_INLINE Home::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        address_(arena),
        ownership_(arena) {}

inline void Home::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Home::~Home() {
  // @@protoc_insertion_point(destructor:sample.Home)
  SharedDtor(*this);
}
inline void Home::SharedDtor(MessageLite& self) {
  Home& this_ = static_cast<Home&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.address_.Destroy();
  this_._impl_.ownership_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Home::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Home(arena);
}
constexpr auto Home::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Home),
                                            alignof(Home));
}
constexpr auto Home::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Home_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Home::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Home>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Home::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Home>(), &Home::ByteSizeLong,
              &Home::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Home, _impl_._cached_size_),
          false,
      },
      &Home::kDescriptorMethods,
      &descriptor_table_first_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Home_class_data_ =
        Home::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Home::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Home_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Home_class_data_.tc_table);
  return Home_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 36, 2>
Home::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Home, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Home_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sample::Home>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string ownership = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Home, _impl_.ownership_)}},
    // string address = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Home, _impl_.address_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string address = 1;
    {PROTOBUF_FIELD_OFFSET(Home, _impl_.address_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string ownership = 2;
    {PROTOBUF_FIELD_OFFSET(Home, _impl_.ownership_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\13\7\11\0\0\0\0\0"
    "sample.Home"
    "address"
    "ownership"
  }},
};
PROTOBUF_NOINLINE void Home::Clear() {
// @@protoc_insertion_point(message_clear_start:sample.Home)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      _impl_.address_.ClearNonDefaultToEmpty();
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      _impl_.ownership_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Home::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Home& this_ = static_cast<const Home&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Home::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Home& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:sample.Home)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // string address = 1;
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    if (!this_._internal_address().empty()) {
      const ::std::string& _s = this_._internal_address();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "sample.Home.address");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string ownership = 2;
  if (CheckHasBit(cached_has_bits, 0x00000002U)) {
    if (!this_._internal_ownership().empty()) {
      const ::std::string& _s = this_._internal_ownership();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "sample.Home.ownership");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sample.Home)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Home::ByteSizeLong(const MessageLite& base) {
  const Home& this_ = static_cast<const Home&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Home::ByteSizeLong() const {
  const Home& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sample.Home)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    // string address = 1;
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!this_._internal_address().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_address());
      }
    }
    // string ownership = 2;
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (!this_._internal_ownership().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_ownership());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Home::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<Home*>(&to_msg);
  auto& from = static_cast<const Home&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:sample.Home)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!from._internal_address().empty()) {
        _this->_internal_set_address(from._internal_address());
      } else {
        if (_this->_impl_.address_.IsDefault()) {
          _this->_internal_set_address("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (!from._internal_ownership().empty()) {
        _this->_internal_set_ownership(from._internal_ownership());
      } else {
        if (_this->_impl_.ownership_.IsDefault()) {
          _this->_internal_set_ownership("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void Home::CopyFrom(const Home& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:sample.Home)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Home::InternalSwap(Home* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, &other->_impl_.address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ownership_, &other->_impl_.ownership_, arena);
}

::google::protobuf::Metadata Home::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PersonFirst::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<PersonFirst>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PersonFirst, _impl_._has_bits_);
};

PersonFirst::PersonFirst(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PersonFirst_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sample.PersonFirst)
}
PROTOBUF_NDEBUG_INLINE PersonFirst::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::sample::PersonFirst& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_),
        job_(arena, from.job_) {}

PersonFirst::PersonFirst(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const PersonFirst& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PersonFirst_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PersonFirst* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.born_ = (CheckHasBit(cached_has_bits, 0x00000004U))
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.born_)
                : nullptr;
  _impl_.car_ = (CheckHasBit(cached_has_bits, 0x00000008U))
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.car_)
                : nullptr;
  _impl_.home_ = (CheckHasBit(cached_has_bits, 0x00000010U))
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.home_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sample.PersonFirst)
}
PROTOBUF_NDEBUG_INLINE PersonFirst::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        name_(arena),
        job_(arena) {}

inline void PersonFirst::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char*>(&_impl_) +
               offsetof(Impl_, born_),
           0,
           offsetof(Impl_, home_) -
               offsetof(Impl_, born_) +
               sizeof(Impl_::home_));
}
PersonFirst::~PersonFirst() {
  // @@protoc_insertion_point(destructor:sample.PersonFirst)
  SharedDtor(*this);
}
inline void PersonFirst::SharedDtor(MessageLite& self) {
  PersonFirst& this_ = static_cast<PersonFirst&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.job_.Destroy();
  delete this_._impl_.born_;
  delete this_._impl_.car_;
  delete this_._impl_.home_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PersonFirst::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PersonFirst(arena);
}
constexpr auto PersonFirst::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PersonFirst),
                                            alignof(PersonFirst));
}
constexpr auto PersonFirst::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PersonFirst_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PersonFirst::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PersonFirst>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PersonFirst::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PersonFirst>(), &PersonFirst::ByteSizeLong,
              &PersonFirst::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PersonFirst, _impl_._cached_size_),
          false,
      },
      &PersonFirst::kDescriptorMethods,
      &descriptor_table_first_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull PersonFirst_class_data_ =
        PersonFirst::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
PersonFirst::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PersonFirst_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PersonFirst_class_data_.tc_table);
  return PersonFirst_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 3, 34, 2>
PersonFirst::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PersonFirst, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    PersonFirst_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sample::PersonFirst>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PersonFirst, _impl_.name_)}},
    // .sample.Born born = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 2, 0, PROTOBUF_FIELD_OFFSET(PersonFirst, _impl_.born_)}},
    // .sample.Car car = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 3, 1, PROTOBUF_FIELD_OFFSET(PersonFirst, _impl_.car_)}},
    // .sample.Home home = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 4, 2, PROTOBUF_FIELD_OFFSET(PersonFirst, _impl_.home_)}},
    // string job = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 1, 0, PROTOBUF_FIELD_OFFSET(PersonFirst, _impl_.job_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(PersonFirst, _impl_.name_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .sample.Born born = 2;
    {PROTOBUF_FIELD_OFFSET(PersonFirst, _impl_.born_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sample.Car car = 3;
    {PROTOBUF_FIELD_OFFSET(PersonFirst, _impl_.car_), _Internal::kHasBitsOffset + 3, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sample.Home home = 4;
    {PROTOBUF_FIELD_OFFSET(PersonFirst, _impl_.home_), _Internal::kHasBitsOffset + 4, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string job = 5;
    {PROTOBUF_FIELD_OFFSET(PersonFirst, _impl_.job_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sample::Born>()},
      {::_pbi::TcParser::GetTable<::sample::Car>()},
      {::_pbi::TcParser::GetTable<::sample::Home>()},
  }},
  {{
    "\22\4\0\0\0\3\0\0"
    "sample.PersonFirst"
    "name"
    "job"
  }},
};
PROTOBUF_NOINLINE void PersonFirst::Clear() {
// @@protoc_insertion_point(message_clear_start:sample.PersonFirst)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x0000001fU)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      _impl_.job_.ClearNonDefaultToEmpty();
    }
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      ABSL_DCHECK(_impl_.born_ != nullptr);
      _impl_.born_->Clear();
    }
    if (CheckHasBit(cached_has_bits, 0x00000008U)) {
      ABSL_DCHECK(_impl_.car_ != nullptr);
      _impl_.car_->Clear();
    }
    if (CheckHasBit(cached_has_bits, 0x00000010U)) {
      ABSL_DCHECK(_impl_.home_ != nullptr);
      _impl_.home_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PersonFirst::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PersonFirst& this_ = static_cast<const PersonFirst&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PersonFirst::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PersonFirst& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:sample.PersonFirst)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // string name = 1;
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "sample.PersonFirst.name");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // .sample.Born born = 2;
  if (CheckHasBit(cached_has_bits, 0x00000004U)) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.born_, this_._impl_.born_->GetCachedSize(), target,
        stream);
  }

  // .sample.Car car = 3;
  if (CheckHasBit(cached_has_bits, 0x00000008U)) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.car_, this_._impl_.car_->GetCachedSize(), target,
        stream);
  }

  // .sample.Home home = 4;
  if (CheckHasBit(cached_has_bits, 0x00000010U)) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.home_, this_._impl_.home_->GetCachedSize(), target,
        stream);
  }

  // string job = 5;
  if (CheckHasBit(cached_has_bits, 0x00000002U)) {
    if (!this_._internal_job().empty()) {
      const ::std::string& _s = this_._internal_job();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "sample.PersonFirst.job");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sample.PersonFirst)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PersonFirst::ByteSizeLong(const MessageLite& base) {
  const PersonFirst& this_ = static_cast<const PersonFirst&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PersonFirst::ByteSizeLong() const {
  const PersonFirst& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sample.PersonFirst)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x0000001fU)) {
    // string name = 1;
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // string job = 5;
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (!this_._internal_job().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_job());
      }
    }
    // .sample.Born born = 2;
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.born_);
    }
    // .sample.Car car = 3;
    if (CheckHasBit(cached_has_bits, 0x00000008U)) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.car_);
    }
    // .sample.Home home = 4;
    if (CheckHasBit(cached_has_bits, 0x00000010U)) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.home_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PersonFirst::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<PersonFirst*>(&to_msg);
  auto& from = static_cast<const PersonFirst&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sample.PersonFirst)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x0000001fU)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (!from._internal_job().empty()) {
        _this->_internal_set_job(from._internal_job());
      } else {
        if (_this->_impl_.job_.IsDefault()) {
          _this->_internal_set_job("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      ABSL_DCHECK(from._impl_.born_ != nullptr);
      if (_this->_impl_.born_ == nullptr) {
        _this->_impl_.born_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.born_);
      } else {
        _this->_impl_.born_->MergeFrom(*from._impl_.born_);
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000008U)) {
      ABSL_DCHECK(from._impl_.car_ != nullptr);
      if (_this->_impl_.car_ == nullptr) {
        _this->_impl_.car_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.car_);
      } else {
        _this->_impl_.car_->MergeFrom(*from._impl_.car_);
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000010U)) {
      ABSL_DCHECK(from._impl_.home_ != nullptr);
      if (_this->_impl_.home_ == nullptr) {
        _this->_impl_.home_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.home_);
      } else {
        _this->_impl_.home_->MergeFrom(*from._impl_.home_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void PersonFirst::CopyFrom(const PersonFirst& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:sample.PersonFirst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PersonFirst::InternalSwap(PersonFirst* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.job_, &other->_impl_.job_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PersonFirst, _impl_.home_)
      + sizeof(PersonFirst::_impl_.home_)
      - PROTOBUF_FIELD_OFFSET(PersonFirst, _impl_.born_)>(
          reinterpret_cast<char*>(&_impl_.born_),
          reinterpret_cast<char*>(&other->_impl_.born_));
}

::google::protobuf::Metadata PersonFirst::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PeopleFirst::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<PeopleFirst>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PeopleFirst, _impl_._has_bits_);
};

PeopleFirst::PeopleFirst(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PeopleFirst_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sample.PeopleFirst)
}
PROTOBUF_NDEBUG_INLINE PeopleFirst::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::sample::PeopleFirst& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        people_{visibility, arena, from.people_} {}

PeopleFirst::PeopleFirst(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const PeopleFirst& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PeopleFirst_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PeopleFirst* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:sample.PeopleFirst)
}
PROTOBUF_NDEBUG_INLINE PeopleFirst::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        people_{visibility, arena} {}

inline void PeopleFirst::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PeopleFirst::~PeopleFirst() {
  // @@protoc_insertion_point(destructor:sample.PeopleFirst)
  SharedDtor(*this);
}
inline void PeopleFirst::SharedDtor(MessageLite& self) {
  PeopleFirst& this_ = static_cast<PeopleFirst&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PeopleFirst::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PeopleFirst(arena);
}
constexpr auto PeopleFirst::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PeopleFirst, _impl_.people_) +
          decltype(PeopleFirst::_impl_.people_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(PeopleFirst), alignof(PeopleFirst), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PeopleFirst::PlacementNew_,
                                 sizeof(PeopleFirst),
                                 alignof(PeopleFirst));
  }
}
constexpr auto PeopleFirst::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PeopleFirst_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PeopleFirst::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PeopleFirst>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PeopleFirst::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PeopleFirst>(), &PeopleFirst::ByteSizeLong,
              &PeopleFirst::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PeopleFirst, _impl_._cached_size_),
          false,
      },
      &PeopleFirst::kDescriptorMethods,
      &descriptor_table_first_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull PeopleFirst_class_data_ =
        PeopleFirst::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
PeopleFirst::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PeopleFirst_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PeopleFirst_class_data_.tc_table);
  return PeopleFirst_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
PeopleFirst::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PeopleFirst, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    PeopleFirst_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sample::PeopleFirst>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .sample.PersonFirst people = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PeopleFirst, _impl_.people_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .sample.PersonFirst people = 1;
    {PROTOBUF_FIELD_OFFSET(PeopleFirst, _impl_.people_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sample::PersonFirst>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void PeopleFirst::Clear() {
// @@protoc_insertion_point(message_clear_start:sample.PeopleFirst)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (CheckHasBitForRepeated(cached_has_bits, 0x00000001U)) {
    _impl_.people_.Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PeopleFirst::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PeopleFirst& this_ = static_cast<const PeopleFirst&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PeopleFirst::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PeopleFirst& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:sample.PeopleFirst)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // repeated .sample.PersonFirst people = 1;
  if (CheckHasBitForRepeated(cached_has_bits, 0x00000001U)) {
    for (unsigned i = 0, n = static_cast<unsigned>(
                             this_._internal_people_size());
         i < n; i++) {
      const auto& repfield = this_._internal_people().Get(i);
      target =
          ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
              1, repfield, repfield.GetCachedSize(),
              target, stream);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sample.PeopleFirst)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PeopleFirst::ByteSizeLong(const MessageLite& base) {
  const PeopleFirst& this_ = static_cast<const PeopleFirst&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PeopleFirst::ByteSizeLong() const {
  const PeopleFirst& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sample.PeopleFirst)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .sample.PersonFirst people = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if (CheckHasBitForRepeated(cached_has_bits, 0x00000001U)) {
      total_size += 1UL * this_._internal_people_size();
      for (const auto& msg : this_._internal_people()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PeopleFirst::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<PeopleFirst*>(&to_msg);
  auto& from = static_cast<const PeopleFirst&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:sample.PeopleFirst)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (CheckHasBitForRepeated(cached_has_bits, 0x00000001U)) {
    _this->_internal_mutable_people()->MergeFrom(
        from._internal_people());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void PeopleFirst::CopyFrom(const PeopleFirst& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:sample.PeopleFirst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PeopleFirst::InternalSwap(PeopleFirst* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.people_.InternalSwap(&other->_impl_.people_);
}

::google::protobuf::Metadata PeopleFirst::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace sample
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_first_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
